{
  "version": 3,
  "sources": ["../src/index.ts", "../src/transform.ts", "../src/parse.ts", "../src/generator.ts", "../src/utils.ts", "../src/hash.js", "../src/typings.ts"],
  "sourcesContent": ["import path from \"path\";\nimport fs from \"fs\";\nimport glob from \"glob\";\nimport Transformer from \"./transform\";\nimport { logInfo, logError, logNote, logWarn, mkdirSync } from \"./utils\";\nimport { ConfigOptions, CommanderOptions } from \"./typings\";\n\nmodule.exports = function (cli: CommanderOptions) {\n  // \u8BFB\u53D6\u4F4D\u4E8Epackage.json\u91CC\u7684\u914D\u7F6E\u9879\n  let options: ConfigOptions = {\n    pattern: \"**/*.{vue,js}\",\n    ignore: [\"node_modules/**\"],\n    output: \"i18n/zh-CN.json\",\n    useUniqKey: false,\n    importPath: \"\",\n  };\n  try {\n    const localPackageJson = fs.readFileSync(\n      path.resolve(process.cwd(), \"package.json\"),\n      \"utf8\"\n    );\n    const config: { trust: ConfigOptions } = JSON.parse(localPackageJson);\n    if (config.trust) {\n      options = {\n        ...options,\n        ...config.trust,\n      };\n    }\n  } catch (err) {\n    logError(err as string);\n    process.exit(1);\n  }\n\n  // \u7EC4\u5408 CLI \u7684\u8F93\u5165\u53C2\u6570\n  if (cli.output) {\n    options.output = cli.output;\n  }\n\n  if (cli.import) {\n    options.importPath = cli.import;\n  }\n\n  // \u5FC5\u987B\u6307\u5B9A\u5F15\u5165\u7684\u4ECEvue-i18n\u5BFC\u51FA\u5BF9\u8C61\u7684\u8DEF\u5F84\uFF0C\u65B9\u4FBF\u5728script\u5185\u90E8\u81EA\u52A8\u751F\u6210import\u8BED\u53E5\n  if (!options.importPath) {\n    logError(\"Please set importExpression's filepath.\");\n    process.exit(1);\n  }\n\n  let locales = {};\n  // \u5DF2\u5B58\u5728\u7684\u591A\u56FD\u8BED\u6587\u4EF6\n  const outputJSONPath = path.resolve(process.cwd(), options.output!);\n  if (fs.existsSync(outputJSONPath)) {\n    const content = fs.readFileSync(outputJSONPath, \"utf8\");\n    if (content) {\n      locales = JSON.parse(content);\n    }\n  }\n\n  glob\n    .sync(options.pattern!, { ignore: options.ignore })\n    .forEach((filename) => {\n      const filePath = path.resolve(process.cwd(), filename);\n      logInfo(`\uD83D\uDE80 detecting file: ${filePath}`);\n      const sourceCode = fs.readFileSync(filePath, \"utf8\");\n      try {\n        const { result } = new Transformer({\n          code: sourceCode,\n          locales,\n          useUniqKey: options.useUniqKey,\n          importPath: options.importPath,\n          filename,\n        });\n        fs.writeFileSync(filePath, result, \"utf8\");\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n  if (Object.keys(locales).length) {\n    mkdirSync(path.dirname(outputJSONPath));\n\n    fs.writeFileSync(\n      outputJSONPath,\n      JSON.stringify(locales, null, \"\\t\"),\n      \"utf8\"\n    );\n    logNote(\"\uD83C\uDF89\uD83C\uDF89\uD83C\uDF89 Extract successfully!\");\n  } else {\n    logWarn(\n      \"There is no chinese characters can be found in specified directory.\"\n    );\n  }\n};\n", "import babelTraverse, { Visitor } from \"@babel/traverse\";\nimport * as t from \"@babel/types\";\nimport path from \"path\";\nimport {\n  ElementNode,\n  SimpleExpressionNode,\n  NodeTypes,\n} from \"@vue/compiler-core\";\nimport { parseVue, parseJS } from \"./parse\";\nimport {\n  generateTemplate,\n  generateJS,\n  generateInterpolation,\n  generateSfc,\n} from \"./generator\";\nimport { hasChineseCharacter, logError } from \"./utils\";\nimport { generateHash } from \"./hash\";\nimport { ConfigOptions, FileType } from \"./typings\";\n\nfunction createDirectiveAttr(type: string, name: string, value: string) {\n  // \u5904\u7406\u7279\u6B8A\u7684\u4E8B\u4EF6\u5C5E\u6027\n  if (type === \"on\") {\n    return {\n      name: \"on\",\n      type: NodeTypes.DIRECTIVE,\n      loc: {\n        source: `@${name}=\"${value}\"`,\n      },\n    };\n  }\n\n  return {\n    name: \"bind\",\n    type: NodeTypes.DIRECTIVE,\n    loc: {\n      source: `:${name}=\"${value}\"`,\n    },\n  };\n}\n\nfunction createInterpolationNode(content: string) {\n  return {\n    type: NodeTypes.INTERPOLATION,\n    loc: {\n      source: `{{ ${content} }}`,\n    },\n  };\n}\n\ninterface Options extends ConfigOptions {\n  code: string;\n  locales: Record<string, string>;\n  filename: string;\n}\n\nclass Transformer {\n  // \u8F6C\u6362\u540E\u7684\u4EE3\u7801\n  result = \"\";\n  // \u63D0\u53D6\u7684\u4E2D\u6587\u952E\u503C\u5BF9\n  locales: Record<string, string> = {};\n  sourceCode: string;\n  // \u5355\u4E00\u7684JS\u6587\u4EF6\n  filename: string;\n  fileType: FileType;\n  importVar = \"I18N\";\n  importPath = \"\";\n\n  constructor({ code, locales, importPath, filename }: Options) {\n    this.sourceCode = code;\n    this.result = code;\n    this.locales = locales;\n    this.importPath = importPath;\n    this.filename = filename;\n    this.fileType = path.extname(filename) as FileType;\n\n    this.startTransform();\n  }\n\n  startTransform() {\n    if (!Object.values(FileType).includes(this.fileType)) {\n      logError(`Unsupported file type: ${this.filename}`);\n      return;\n    }\n\n    if (hasChineseCharacter(this.sourceCode)) {\n      if (\n        this.fileType === FileType.JS &&\n        this.hasChineseCharacterInJS(this.sourceCode)\n      ) {\n        this.result = generateJS(this.transformJS(this.sourceCode));\n      } else if (this.fileType === FileType.VUE) {\n        const descriptor = parseVue(this.sourceCode);\n        if (\n          descriptor?.template?.content &&\n          hasChineseCharacter(descriptor?.template?.content)\n        ) {\n          descriptor.template.content = generateTemplate({\n            ...this.transformTemplate(descriptor?.template.ast),\n            tag: \"\",\n          });\n        }\n\n        if (\n          descriptor?.script?.content &&\n          this.hasChineseCharacterInJS(descriptor?.script?.content)\n        ) {\n          descriptor.script.content = generateJS(\n            this.transformJS(descriptor.script.content)\n          );\n        } else if (\n          descriptor?.scriptSetup?.content &&\n          this.hasChineseCharacterInJS(descriptor?.scriptSetup?.content)\n        ) {\n          descriptor.scriptSetup.content = generateJS(\n            this.transformJS(descriptor.scriptSetup.content)\n          );\n        }\n\n        this.result = generateSfc(descriptor);\n      }\n    }\n  }\n\n  hasChineseCharacterInJS = (code: string) => {\n    let result = false;\n    babelTraverse(parseJS(code), {\n      enter: (path) => {\n        if (\n          path.node.type === \"StringLiteral\" &&\n          hasChineseCharacter(path.node.extra?.rawValue as string)\n        ) {\n          path.stop();\n          result = true;\n        }\n\n        if (\n          path.node.type === \"TemplateLiteral\" &&\n          path.node.quasis.some((q) => hasChineseCharacter(q.value.cooked))\n        ) {\n          path.stop();\n          result = true;\n        }\n\n        if (\n          path.node.type === \"JSXText\" &&\n          hasChineseCharacter(path.node.value)\n        ) {\n          path.stop();\n          result = true;\n        }\n      },\n    });\n\n    return result;\n  };\n\n  /**\n   * \u8F6C\u6362template\u8282\u70B9\n   */\n  transformTemplate = (ast: ElementNode) => {\n    /**\n     * this is a hack\n     * FIXME:\u6307\u5B9A v-pre \u7684\u5143\u7D20\u7684\u5C5E\u6027\u53CA\u5176\u5B50\u5143\u7D20\u7684\u5C5E\u6027\u548C\u63D2\u503C\u8BED\u6CD5\u90FD\u4E0D\u9700\u8981\u89E3\u6790\uFF0C\n     * \u4F46\u662F @vue/compiler-sfc \u89E3\u6790\u540E\u7684props\u4E2D\u4E0D\u4F1A\u5305\u542B v-pre \u7684\u5C5E\u6027\u540D\uFF0C\u6240\u4EE5\u8FD9\u91CC\u6682\u65F6\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914Dv-pre\uFF0C\u5E76\u751F\u52A8\u6CE8\u5165 v-pre \u5230 props \u4E2D\n     * https://github.com/vuejs/vue-next/issues/4975\n     */\n    if (\n      ast.type === NodeTypes.ELEMENT &&\n      /^<+?[^>]+\\s+(v-pre)[^>]*>+?[\\s\\S]*<+?\\/[\\s\\S]*>+?$/gm.test(\n        ast.loc.source\n      )\n    ) {\n      ast.props = [\n        {\n          type: NodeTypes.DIRECTIVE,\n          name: \"pre\",\n          // @ts-expect-error \u7C7B\u578B\u201C{ source: string; }\u201D\u7F3A\u5C11\u7C7B\u578B\u201CSourceLocation\u201D\u4E2D\u7684\u4EE5\u4E0B\u5C5E\u6027: start, endts(2739)\n          loc: {\n            source: \"v-pre\",\n          },\n        },\n      ];\n      return ast;\n    }\n\n    if (ast.props.length) {\n      // @ts-expect-error \u7C7B\u578B\u201C{ name: string; type: number; loc: { source: string; }; }\u201D\u7F3A\u5C11\u7C7B\u578B\u201CDirectiveNode\u201D\u4E2D\u7684\u4EE5\u4E0B\u5C5E\u6027: exp, arg, modifiersts(2322)\n      ast.props = ast.props.map((prop) => {\n        // vue\u6307\u4EE4\n        if (\n          prop.type === NodeTypes.DIRECTIVE &&\n          hasChineseCharacter((prop.exp as SimpleExpressionNode)?.content)\n        ) {\n          const jsCode = generateInterpolation(\n            this.transformJS((prop.exp as SimpleExpressionNode)?.content, true)\n          );\n          return createDirectiveAttr(\n            prop.name,\n            (prop.arg as SimpleExpressionNode)?.content,\n            jsCode\n          );\n        }\n        // \u666E\u901A\u5C5E\u6027\n        if (\n          prop.type === NodeTypes.ATTRIBUTE &&\n          hasChineseCharacter(prop.value?.content)\n        ) {\n          const localeKey = this.extractChar(prop.value!.content);\n          return createDirectiveAttr(\"bind\", prop.name, `$t('${localeKey}')`);\n        }\n\n        return prop;\n      });\n    }\n\n    if (ast.children.length) {\n      // @ts-expect-error \u7C7B\u578B\u201C{ type: number; loc: { source: string; }; }\u201D\u7F3A\u5C11\u7C7B\u578B\u201CTextCallNode\u201D\u4E2D\u7684\u4EE5\u4E0B\u5C5E\u6027: content, codegenNodets(2322)\n      ast.children = ast.children.map((child) => {\n        if (\n          child.type === NodeTypes.TEXT &&\n          hasChineseCharacter(child.content)\n        ) {\n          const localeKey = this.extractChar(child.content);\n          return createInterpolationNode(`$t('${localeKey}')`);\n        }\n\n        // \u63D2\u503C\u8BED\u6CD5\uFF0C\u63D2\u503C\u8BED\u6CD5\u7684\u5185\u5BB9\u5305\u542B\u5728child.content\u5185\u90E8\uFF0C\u5982\u679C\u5339\u914D\u5230\u4E2D\u6587\u5B57\u7B26\uFF0C\u5219\u8FDB\u884CJS\u8868\u8FBE\u5F0F\u89E3\u6790\u5E76\u66FF\u6362\n        if (\n          child.type === NodeTypes.INTERPOLATION &&\n          hasChineseCharacter((child.content as SimpleExpressionNode)?.content)\n        ) {\n          const jsCode = generateInterpolation(\n            this.transformJS(\n              (child.content as SimpleExpressionNode)?.content,\n              true\n            )\n          );\n          return createInterpolationNode(jsCode);\n        }\n\n        // \u5143\u7D20\n        if (child.type === NodeTypes.ELEMENT) {\n          return this.transformTemplate(child);\n        }\n\n        return child;\n      });\n    }\n\n    return ast;\n  };\n\n  transformJS = (code: string, isInTemplate?: boolean) => {\n    const ast = parseJS(code);\n    let shouldImportVar = false;\n\n    const visitor: Visitor = {\n      Program: {\n        exit: (path) => {\n          if (this.fileType === FileType.JS) {\n            // \u89E3\u6790import\u8BED\u53E5\n            path.traverse({\n              ImportDeclaration: (path) => {\n                if (\n                  path.node.specifiers.find(\n                    (item) => item.local.name === this.importVar\n                  )\n                ) {\n                  shouldImportVar = false;\n                  path.stop();\n                }\n              },\n            });\n\n            if (shouldImportVar) {\n              path.unshiftContainer(\n                \"body\",\n                t.importDeclaration(\n                  [t.importDefaultSpecifier(t.identifier(this.importVar))],\n                  t.stringLiteral(this.importPath)\n                )\n              );\n            }\n          }\n        },\n      },\n      StringLiteral: {\n        exit: (path) => {\n          if (hasChineseCharacter(path.node.extra?.rawValue as string)) {\n            const localeKey = this.extractChar(\n              path.node.extra?.rawValue as string\n            );\n\n            if (this.fileType === FileType.JS) {\n              shouldImportVar = true;\n              path.replaceWith(\n                t.callExpression(\n                  t.memberExpression(\n                    t.identifier(this.importVar),\n                    t.identifier(\"t\")\n                  ),\n                  [t.stringLiteral(localeKey)]\n                )\n              );\n            } else if (this.fileType === FileType.VUE) {\n              if (isInTemplate) {\n                path.replaceWith(\n                  t.callExpression(t.identifier(\"$t\"), [\n                    t.stringLiteral(localeKey),\n                  ])\n                );\n              } else {\n                // this.$t\n                path.replaceWith(\n                  t.callExpression(\n                    t.memberExpression(t.thisExpression(), t.identifier(\"$t\")),\n                    [t.stringLiteral(localeKey)]\n                  )\n                );\n              }\n            }\n          }\n        },\n      },\n      TemplateLiteral: {\n        exit: (path) => {\n          // \u68C0\u6D4B\u6A21\u677F\u5B57\u7B26\u4E32\u5185\u90E8\u662F\u5426\u542B\u6709\u4E2D\u6587\u5B57\u7B26\n          if (\n            path.node.quasis.some((q) => hasChineseCharacter(q.value.cooked))\n          ) {\n            // \u751F\u6210\u66FF\u6362\u5B57\u7B26\u4E32\uFF0C\u6CE8\u610F\u8FD9\u91CC\u4E0D\u9700\u8981\u8FC7\u6EE4quasis\u91CC\u7684\u7A7A\u5B57\u7B26\u4E32\n            const replaceStr = path.node.quasis\n              .map((q) => q.value.cooked)\n              .join(\"%s\");\n            const localeKey = this.extractChar(replaceStr);\n            const isIncludeInterpolation = !!path.node.expressions?.length;\n            if (this.fileType === FileType.JS) {\n              shouldImportVar = true;\n              if (isIncludeInterpolation) {\n                path.replaceWith(\n                  t.callExpression(\n                    t.memberExpression(\n                      t.identifier(this.importVar),\n                      t.identifier(\"tExtend\")\n                    ),\n                    [\n                      t.stringLiteral(localeKey),\n                      t.arrayExpression(\n                        path.node.expressions as t.Expression[]\n                      ),\n                    ]\n                  )\n                );\n              } else {\n                path.replaceWith(\n                  t.callExpression(\n                    t.memberExpression(\n                      t.identifier(this.importVar),\n                      t.identifier(\"t\")\n                    ),\n                    [t.stringLiteral(localeKey)]\n                  )\n                );\n              }\n            } else if (this.fileType === FileType.VUE) {\n              if (isInTemplate) {\n                if (isIncludeInterpolation) {\n                  path.replaceWith(\n                    t.callExpression(\n                      t.memberExpression(\n                        t.identifier(\"$i18n\"),\n                        t.identifier(\"tExtend\")\n                      ),\n                      [\n                        t.stringLiteral(localeKey),\n                        t.arrayExpression(\n                          path.node.expressions as t.Expression[]\n                        ),\n                      ]\n                    )\n                  );\n                } else {\n                  path.replaceWith(\n                    t.callExpression(t.identifier(\"$t\"), [\n                      t.stringLiteral(localeKey),\n                    ])\n                  );\n                }\n              } else {\n                if (isIncludeInterpolation) {\n                  path.replaceWith(\n                    t.callExpression(\n                      t.memberExpression(\n                        t.memberExpression(\n                          t.thisExpression(),\n                          t.identifier(\"$i18n\")\n                        ),\n                        t.identifier(\"tExtend\")\n                      ),\n                      [\n                        t.stringLiteral(localeKey),\n                        t.arrayExpression(\n                          path.node.expressions as t.Expression[]\n                        ),\n                      ]\n                    )\n                  );\n                } else {\n                  path.replaceWith(\n                    t.callExpression(\n                      t.memberExpression(\n                        t.thisExpression(),\n                        t.identifier(\"$t\")\n                      ),\n                      [t.stringLiteral(localeKey)]\n                    )\n                  );\n                }\n              }\n            }\n          }\n        },\n      },\n      JSXText: {\n        exit: (path) => {\n          if (hasChineseCharacter(path.node.value)) {\n            const localeKey = this.extractChar(\n              path.node.extra?.rawValue as string\n            );\n\n            path.replaceWith(\n              t.jsxExpressionContainer(\n                t.callExpression(t.identifier(\"$t\"), [\n                  t.stringLiteral(localeKey),\n                ])\n              )\n            );\n          }\n        },\n      },\n    };\n\n    babelTraverse(ast, visitor);\n    return ast;\n  };\n\n  extractChar = (char: string) => {\n    const locale = char.trim();\n    const key = generateHash(locale);\n    this.locales[key] = locale;\n    return key;\n  };\n}\n\nexport default Transformer;\n", "import { parse as vueParser } from \"@vue/compiler-sfc\";\nimport { parse as babelParser } from \"@babel/parser\";\n\nexport function parseVue(code: string) {\n  return vueParser(code).descriptor;\n}\n\nexport function parseJS(code: string) {\n  return babelParser(code, {\n    sourceType: \"module\",\n    plugins: [\"jsx\"],\n  });\n}\n", "import { ParseResult } from \"@babel/parser\";\nimport babelGenerator from \"@babel/generator\";\nimport { SFCDescriptor } from \"@vue/compiler-sfc\";\nimport {\n  ElementNode,\n  TemplateChildNode,\n  AttributeNode,\n  DirectiveNode,\n} from \"@vue/compiler-core\";\nimport { File, Expression } from \"@babel/types\";\nimport prettier from \"prettier\";\n\n/**\n * \u751F\u6210template\u5185\u90E8JS\u8868\u8FBE\u5F0F\n * \u5B57\u7B26\u4E32\u9700\u8981\u4F7F\u7528\u5355\u5F15\u53F7\n * \u51FD\u6570\u8C03\u7528\u672B\u5C3E\u7684\u5206\u53F7\u9700\u8981\u79FB\u9664\n */\nexport function generateInterpolation(\n  ast: ParseResult<File> | ParseResult<Expression>\n) {\n  // that's a hack, because @babel/generator will give a semi after a callexpression\n  return babelGenerator(ast, {\n    compact: false,\n    jsescOption: {\n      quotes: \"single\",\n    },\n  }).code.replace(/;/gm, \"\");\n}\n\n/**\n * \u751F\u6210script\u5185\u90E8\u7684JS\n */\nexport function generateJS(ast: ParseResult<File> | ParseResult<Expression>) {\n  return babelGenerator(ast).code;\n}\n\n/**\n * \u7EC4\u5408template\uFF0Cscript\uFF0Cstyle\n */\nexport function generateSfc(descriptor: SFCDescriptor) {\n  let result = \"\";\n\n  const { template, script, scriptSetup, styles, customBlocks } = descriptor;\n  [template, script, scriptSetup, ...styles, ...customBlocks].forEach(\n    (block) => {\n      if (block?.type) {\n        result += `<${block.type}${Object.entries(block.attrs).reduce(\n          (attrCode, [attrName, attrValue]) => {\n            if (attrValue === true) {\n              attrCode += ` ${attrName}`;\n            } else {\n              attrCode += ` ${attrName}=\"${attrValue}\"`;\n            }\n\n            return attrCode;\n          },\n          \" \"\n        )}>${block.content}</${block.type}>`;\n      }\n    }\n  );\n\n  return prettier.format(result, {\n    parser: \"vue\",\n    semi: true,\n    singleQuote: true,\n  });\n}\n\nexport function generateTemplate(\n  templateAst: ElementNode | TemplateChildNode,\n  children = \"\"\n): string {\n  // @ts-expect-error \u7C7B\u578B\u201CInterpolationNode\u201D\u4E0A\u4E0D\u5B58\u5728\u5C5E\u6027\u201Cchildren\u201D\u3002\n  if (templateAst?.children?.length) {\n    // @ts-expect-error \u7C7B\u578B\u201CInterpolationNode\u201D\u4E0A\u4E0D\u5B58\u5728\u5C5E\u6027\u201Cchildren\u201D\n    children = templateAst.children.reduce((result, child) => {\n      return result + generateTemplate(child);\n    }, \"\");\n  }\n\n  // \u5143\u7D20\u8282\u70B9\n  if (templateAst.type === 1) {\n    return generateElement(templateAst, children);\n  }\n\n  return templateAst.loc.source;\n}\n\nfunction generateElement(node: ElementNode, children: string) {\n  let attributes = \"\";\n\n  if (node.props.length) {\n    attributes = ` ${generateElementAttr(node.props)}`;\n  }\n\n  if (node.tag) {\n    // \u81EA\u5173\u95ED\u6807\u7B7E\uFF1Ahttps://html.spec.whatwg.org/multipage/syntax.html#void-elements\n    const selfClosingTags = [\n      \"area\",\n      \"base\",\n      \"br\",\n      \"col\",\n      \"embed\",\n      \"hr\",\n      \"img\",\n      \"input\",\n      \"link\",\n      \"meta\",\n      \"param\",\n      \"source\",\n      \"track\",\n      \"wbr\",\n    ];\n\n    if (node.isSelfClosing || selfClosingTags.includes(node.tag)) {\n      return `<${node.tag}${attributes} />`;\n    }\n\n    return `<${node.tag}${attributes}>${children}</${node.tag}>`;\n  }\n\n  return children;\n}\n\nfunction generateElementAttr(attrs: Array<AttributeNode | DirectiveNode>) {\n  return attrs\n    .map((attr) => {\n      return attr.loc.source;\n    })\n    .join(\" \");\n}\n", "import chalk from \"chalk\";\nimport fs from \"fs\";\nimport path from \"path\";\n\n/**\n * \u5339\u914D\u4E2D\u6587\u5B57\u7B26\n */\nexport function hasChineseCharacter(code?: string) {\n  return code && /[\\u{4E00}-\\u{9FFF}]/gmu.test(code);\n}\n\n/**\n * print mistake\n */\nexport function logError(message: string) {\n  console.log(chalk.red(message));\n}\n\n/**\n * print warning\n */\nexport function logWarn(message: string) {\n  console.log(chalk.yellow(message));\n}\n\n/**\n * print basic infomation\n */\nexport function logInfo(message: string) {\n  console.log(chalk.white(message));\n}\n\n/**\n * print note\n */\nexport function logNote(message: string) {\n  console.log(chalk.cyan(message));\n}\n\n/**\n * \u68C0\u67E5\u6587\u4EF6\n */\nexport function fileExists(path: string) {\n  let flag = true;\n  try {\n    fs.accessSync(path, fs.constants.F_OK);\n  } catch (e) {\n    flag = false;\n  }\n  return flag;\n}\n\n/**\n * \u9012\u5F52\u521B\u5EFA\u76EE\u5F55\n */\nexport function mkdirSync(dirname: string) {\n  if (fs.existsSync(dirname)) {\n    return true;\n  } else {\n    if (mkdirSync(path.dirname(dirname))) {\n      fs.mkdirSync(dirname);\n      return true;\n    }\n  }\n}\n", "\"use strict\";\n\nconst { createHash } = require(\"crypto\");\n\nexport function generateHash(char, length) {\n  const hash = createHash(\"md5\");\n  hash.update(char);\n  return hash.digest(\"hex\").slice(0, length);\n}\n", "/**\n * \u914D\u7F6E\u9879\u7C7B\u578B\n */\nexport interface ConfigOptions {\n  /**\n   * glob\u5339\u914D\u6A21\u5F0F\uFF1A\n   */\n  pattern?: string;\n  /**\n   * \u6392\u9664\u7684\u6587\u4EF6\uFF1Ahttps://github.com/isaacs/node-glob#options\n   */\n  ignore?: string | string[];\n  /**\n   * \u8F93\u51FA\u7684\u6587\u4EF6\u540D\u6216\u8005\u6587\u4EF6\u540D\u8DEF\u5F84\n   */\n  output?: string;\n  /**\n   * \u662F\u5426\u4E3A\u6BCF\u4E00\u4E2A\u4E2D\u6587\u6587\u6848\u90FD\u4F7F\u7528\u5355\u72EC\u7684key\n   */\n  useUniqKey?: boolean;\n  /**\n   * \u6307\u5B9A\u5F15\u5165vue-i18n\u53D8\u91CF\u7684\u8DEF\u5F84\n   */\n  importPath: string;\n}\n\n/**\n * \u6587\u4EF6\u7C7B\u578B\n */\nexport enum FileType {\n  JS = \".js\",\n  VUE = \".vue\",\n}\n\n/**\n * CLI\n */\nexport interface CommanderOptions {\n  import?: string;\n  output?: string;\n}\n\n/**\n * vue ast\u8282\u70B9\u7C7B\u578B\n */\nexport enum NodeTypes {\n  ROOT = 0,\n  ELEMENT = 1,\n  TEXT = 2,\n  COMMENT = 3,\n  SIMPLE_EXPRESSION = 4,\n  INTERPOLATION = 5,\n  ATTRIBUTE = 6,\n  DIRECTIVE = 7,\n  COMPOUND_EXPRESSION = 8,\n  IF = 9,\n  IF_BRANCH = 10,\n  FOR = 11,\n  TEXT_CALL = 12,\n  VNODE_CALL = 13,\n  JS_CALL_EXPRESSION = 14,\n  JS_OBJECT_EXPRESSION = 15,\n  JS_PROPERTY = 16,\n  JS_ARRAY_EXPRESSION = 17,\n  JS_FUNCTION_EXPRESSION = 18,\n  JS_CONDITIONAL_EXPRESSION = 19,\n  JS_CACHE_EXPRESSION = 20,\n  JS_BLOCK_STATEMENT = 21,\n  JS_TEMPLATE_LITERAL = 22,\n  JS_IF_STATEMENT = 23,\n  JS_ASSIGNMENT_EXPRESSION = 24,\n  JS_SEQUENCE_EXPRESSION = 25,\n  JS_RETURN_STATEMENT = 26,\n}\n"],
  "mappings": "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",
  "names": []
}
